#----------------------------------------------------------------#
#                                                                #
#          Clash.Meta 静态配置文件 - 迁移自扩展脚本          #
#                                                                #
#----------------------------------------------------------------#

# --- 基础配置参数 (Section 2) ---
# 定义 Clash 核心的监听端口、API 和全局行为

# 混合端口，同时支持 HTTP 和 SOCKS5 协议，简化客户端配置
mixed-port: 7890

# 允许来自局域网的连接，必须设置为 true 才能让其他设备使用此 Clash 实例作为网关
allow-lan: true

# 监听所有网络接口，配合 allow-lan: true 使用
bind-address: '*'

# RESTful API 监听地址，设置为 0.0.0.0:9090 以允许局域网内的 Web UI 访问
external-controller: '0.0.0.0:9090'

# (可选) API 访问密钥，增强安全性
# secret: 'YourSecretKey'

# Web UI (Dashboard) 的路径，请根据实际情况修改
external-ui: './dashboard'

# 运行模式，必须为 'rule' 以启用规则分流
mode: rule

# 日志级别，'info' 提供了足够的信息用于日常监控，'debug' 用于深度排查
log-level: info

# 是否启用 IPv6，根据您的网络环境决定
ipv6: false

# --- DNS 配置 (Section 6) ---
# 构建一个高效、抗污染的 DNS 解析系统

dns:
  enable: true
  # 监听地址，作为局域网的 DNS 服务器
  listen: 0.0.0.0:53
  # 增强模式，'fake-ip' 是实现 TUN 模式下域名分流的基石
  enhanced-mode: fake-ip
  # Fake IP 地址池的范围
  fake-ip-range: 198.18.0.1/16
  # 优先使用系统 hosts 文件
  use-hosts: true
  # 国内 DNS 服务器，用于快速解析国内域名
  nameserver:
    - 223.5.5.5
    - 119.29.29.29
  # 备用 DNS，使用加密的国外 DNS (DoH/DoT) 来防止污染
  fallback:
    - https://dns.google/dns-query
    - tls://1.1.1.1:853
  # 备用 DNS 过滤器，当 nameserver 解析出非中国大陆 IP 时，使用 fallback 的结果
  fallback-filter:
    geoip: true
    geoip-code: CN

# --- TUN 模式配置 (Section 6) ---
# 接管系统所有网络流量，实现真·全局代理

tun:
  enable: true
  # 使用操作系统的网络协议栈，性能最高
  stack: system
  # 自动配置系统路由表
  auto-route: true
  # 自动检测主网络接口
  auto-detect-interface: true
  # DNS 劫持，TUN 模式的命脉，确保所有 DNS 请求都被 Clash 处理
  dns-hijack:
    - 'any:53'

# --- 代理订阅源 (Section 3) ---
# 定义所有的远程代理订阅链接

proxy-providers:
  # 示例订阅源 1
  MyProvider1:
    type: http
    url: "https://your-subscription-url-1.com/sub"
    # 每小时更新一次
    interval: 3600
    path:./providers/provider1.yaml
    health-check:
      enable: true
      url: http://www.gstatic.com/generate_204
      interval: 600
  # 示例订阅源 2
  MyProvider2:
    type: http
    url: "https://your-subscription-url-2.com/sub"
    interval: 3600
    path:./providers/provider2.yaml
    health-check:
      enable: true
      url: http://www.gstatic.com/generate_204
      interval: 600

# --- 代理组 (Section 4) ---
# 组织代理节点，定义策略行为

proxy-groups:
  # --- 顶层手动选择组 ---
  - name: 'PROXY'
    type: select
    proxies:
      - '🔰 自动选择'
      - ' DIRECT'
      - 'REJECT'
      - '🌏 国外流量'
      - '🇭🇰 香港节点'
      - '🇯🇵 日本节点'
      - '🇺🇸 美国节点'

  # --- 自动策略组 ---
  - name: '🔰 自动选择'
    type: url-test
    # 引入所有订阅源
    use:
      - MyProvider1
      - MyProvider2
    url: 'http://www.gstatic.com/generate_204'
    interval: 300
    # 延迟容忍值，防止频繁切换
    tolerance: 50

  - name: '🌏 国外流量'
    type: url-test
    use:
      - MyProvider1
      - MyProvider2
    # 排除国内节点
    exclude-filter: 'CN|中国|内|专线'
    url: 'http://www.gstatic.com/generate_204'
    interval: 300
    tolerance: 50

  # --- 按区域筛选的策略组 ---
  - name: '🇭🇰 香港节点'
    type: url-test
    use:
      - MyProvider1
      - MyProvider2
    # 使用正则表达式筛选香港节点
    filter: 'HK|Hong Kong|香港'
    url: 'http://www.gstatic.com/generate_204'
    interval: 300
    tolerance: 50

  - name: '🇯🇵 日本节点'
    type: url-test
    use:
      - MyProvider1
      - MyProvider2
    filter: 'JP|Japan|日本'
    url: 'http://www.gstatic.com/generate_204'
    interval: 300
    tolerance: 50

  - name: '🇺🇸 美国节点'
    type: url-test
    use:
      - MyProvider1
      - MyProvider2
    filter: 'US|United States|美国'
    url: 'http://www.gstatic.com/generate_204'
    interval: 300
    tolerance: 50

  # --- 特定服务策略组 ---
  - name: '📺 Netflix'
    type: select
    proxies:
      - '🇭🇰 香港节点'
      - '🇯🇵 日本节点'
      - '🇺🇸 美国节点'
      - 'PROXY'

  - name: '🎵 YouTube'
    type: select
    proxies:
      - '🔰 自动选择'
      - 'PROXY'

# --- 规则集 (Section 5) ---
# 定义流量分流规则，顺序至关重要

rules:
  # --- 直连规则 ---
  # 局域网地址
  - GEOIP, LAN, DIRECT
  # 中国大陆 IP
  - GEOIP, CN, DIRECT
  # 中国大陆域名
  - GEOSITE, CN, DIRECT
  # 常见需要直连的服务
  - GEOSITE, Private, DIRECT
  - GEOSITE, Apple-CN, DIRECT
  - GEOSITE, Microsoft-CN, DIRECT

  # --- 代理规则 ---
  # 特定服务走特定策略
  - GEOSITE, Netflix, '📺 Netflix'
  - GEOSITE, Youtube, '🎵 YouTube'
  # Telegram IP 走代理，无需解析域名，提高速度和抗污染
  - GEOIP, Telegram, PROXY, no-resolve
  # 国外知名网站
  - GEOSITE, Google, PROXY
  - GEOSITE, Facebook, PROXY
  - GEOSITE, Twitter, PROXY

  # --- 最终规则 ---
  # 未被匹配的非中国大陆流量走代理
  - GEOSITE, Geolocation-!CN, PROXY
  # 所有其他未匹配的流量走总代理入口
  - MATCH, PROXY
